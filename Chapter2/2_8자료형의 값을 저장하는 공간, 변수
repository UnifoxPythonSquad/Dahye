"""
 문제 1

 다음 예제를 실행하고 그 결과를 설명하시오.

 '''
 >>> a = [1, 2, 3]
 >>> b = [1, 2, 3]
 >>> a is b
 '''
"""
#답은 False가 나온다. 같은 값이 들어있는것은 맞지만, 기리키는 주소가 다르기때문


"""
 문제 2

 다음 예제를 실행하고 그 결과를 설명하시오.
 
 '''
 >>> a = [1, 2, 3]
 >>> b = a
 >>> a is b
 '''
"""
#답은 True가 나온다. 같은값과 같은 주소를 가지게되기 때문에 True가 나온다.


"""
 문제 3

 파이썬은 다음처럼 동일한 값에 여러 개의 변수를 선언할 수 있다.
 아래와 같이 a, b 변수를 선언 한 후 a의
 첫 번째 요소값을 변경하면 b의 값은 어떻게 될까?
 그리고 이런 결과가 나오는 이유에 대해서 설명해보시오.

 '''
 >>> a = b = [1, 2, 3]
 >>> a[1] = 4
 >>> print(b)
 '''
"""
#[1 4 3]순서로 나올 것이다. a=b가 있기때문에 같은 주소를 가리키게 되기 때문이다.


"""
 문제 4

 다음 예제를 실행하고 그 결과를 설명하시오.

 '''
 >>> a = [1, 2, 3]
 >>> b = a[:]
 >>> a is b
 '''
"""
# [:]는 복사를 하는 함수이기에 False가 나올것이다.


"""
 문제 5

 b리스트는 a리스트를 copy하여 다음과 같이 생성하였다.
 >>> a = [1, 2, 3]
 >>> b = a[:]

 그리고 다음과 같이 a리스트의 두번째 요소값을 2에서 4로 바꾸었다.
 >>> a[1] = 4
 >>> a
 [1, 4, 3]
 >>> print(b)

 이제 b리스트를 출력하면 어떤 값이 출력될까?
 그리고 그런 결과값이 나오는 이유에 대해서 설명하시오.
"""
# [:]는 복사에 의미만을 가지고 있기때문에
# 주소는 다르다. 따라서 [1,2,3]이 출력될 것이다.


"""
 문제 6

 다음과 같은 리스트 a가 있다.
 >>> a = [1, 2, 3]
 
 리스트 a에 [4, 5]를 + 기호를 이용하여 더한 결과는 다음과 같다.
 >>> a = [1, 2, 3]
 >>> a = a + [4,5]
 >>> a
 [1, 2, 3, 4, 5]

 리스트 a에 [4,5]를 extend를 이용하여 더한 결과는 다음과 같다.
 >>> a = [1, 2, 3]
 >>> a.extend([4, 5])
 >>> a
 [1, 2, 3, 4, 5]

 + 기호를 이용하여 더한것과 extend한 것의 차이점이 있을까?
 있다면 그 차이점에 대해서 서술하시오.
"""
#(틀림)
#'+'를 이용하면 주소값이 바뀌게되고
#'extend'를 사용하면 주소값이 바뀌지 않는다.


"""
 문제 7

 a리스트는 리스트내에 [2, 3]이라는 리스트를 하나 더 포함하고 있는 리스트이다.
 이 a리스트를 copy하여 b리스트를 다음과 같이 만들었다.
 >>> a = [1, [2, 3], 4]
 >>> b = a[:]

 그리고 다음과 같이 a 리스트에 포함된 [2, 3]의 첫번째 값을 2에서 5로
 바꾸어 주었다. 이렇게 a리스트에 포함된 리스트의 요소값을 변경하면
 b 리스트는 어떻게 될까? 그리고 그런 결과값이 나오는 이유에 대해서 설명하시오.
 >>> a[1][0] = 5
 >>> a
 [1, [5, 3], 4]
 >>> print(b)
"""
#[1,[5,3],4]그대로일 것이다. [:]는 복사에 의미이기 때문에 서로 같은곳을 바라본다
# 따라서 a에 리스트값을 변경하면 b의값도 바뀐다.
